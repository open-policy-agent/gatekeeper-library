apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: requirednamespacequota
  annotations:
    metadata.gatekeeper.sh/title: "Required Namespace Quota"
    metadata.gatekeeper.sh/version: 1.0.0
    description: >-
      Ensures that all namespaces have a ResourceQuota defined.
spec:
  crd:
    spec:
      names:
        kind: RequiredNamespaceQuota
      validation:
        openAPIV3Schema:
          type: object
          properties:
            message:
              type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package requirednamespacequota

        import rego.v1

        # Enforce that every namespace must have a ResourceQuota
        violation[{"msg": msg}] if {
            input.review.kind.kind == "Namespace"
            ns := input.review.object.metadata.name
            not has_quota
            msg := sprintf("Namespace %v must have a ResourceQuota", [ns])
        }

        # Check if a namespace has a ResourceQuota
        has_quota if {
            some quota in input.review.related
            quota.kind == "ResourceQuota"
            quota.metadata.namespace == input.review.object.metadata.name
        }
