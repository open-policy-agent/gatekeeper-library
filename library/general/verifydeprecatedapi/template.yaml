apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: verifydeprecatedapi
  annotations:
    metadata.gatekeeper.sh/title: "Verify deprecated APIs"
    metadata.gatekeeper.sh/version: 1.0.0
    description: >-
      Verifies deprecated Kubernetes APIs to ensure all the API versions are up to date.
spec:
  crd:
    spec:
      names:
        kind: VerifyDeprecatedAPI
      validation:
        openAPIV3Schema:
          type: object
          properties:
            kvs:
              type: array
              description: Deprecated api versions and corresponding kinds
              items:
                type: object
                properties:
                  deprecatedAPI:
                    type: string
                    description: deprecated api
                  kinds: 
                    type: array
                    items:
                      type: string
                    description: impacted list of kinds
                  targetAPI:
                    type: string
                    description: target api
            k8sVersion:
              type: number
              description: kubernetes version
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package verifydeprecatedapi

        violation[{"msg": msg}] {
          kvs := input.parameters.kvs[_]
          kvs.deprecatedAPI == input.review.object.apiVersion
          k := kvs.kinds[_]
          k == input.review.object.kind
          msg := get_message(input.review.object.kind, input.review.object.apiVersion, input.parameters.k8sVersion, kvs.targetAPI)
        }

        get_message(kind, apiVersion, k8sVersion, targetAPI) = msg {
          not match(targetAPI)
          msg := sprintf("API %v for %v is deprecated in Kubernetes version %v, please use %v instead", [kind, apiVersion, k8sVersion, targetAPI])
        }

        get_message(kind, apiVersion, k8sVersion, targetAPI) = msg {
          match(targetAPI)
          msg := sprintf("API %v for %v is deprecated in Kubernetes version %v, please see Kubernetes API deprecation guide", [kind, apiVersion, k8sVersion])
        }

        match(api) {
          api == "None"
        }