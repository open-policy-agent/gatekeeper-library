"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3828],{6188:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>p,contentTitle:()=>s,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var l=a(5893),t=a(1151);const i={id:"poddisruptionbudget",title:"Pod Disruption Budget"},s="Pod Disruption Budget",o={id:"validation/poddisruptionbudget",title:"Pod Disruption Budget",description:"Description",source:"@site/docs/validation/poddisruptionbudget.md",sourceDirName:"validation",slug:"/validation/poddisruptionbudget",permalink:"/gatekeeper-library/website/validation/poddisruptionbudget",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/poddisruptionbudget.md",tags:[],version:"current",frontMatter:{id:"poddisruptionbudget",title:"Pod Disruption Budget"},sidebar:"docs",previous:{title:"Block updating Service Account",permalink:"/gatekeeper-library/website/validation/noupdateserviceaccount"},next:{title:"Replica Limits",permalink:"/gatekeeper-library/website/validation/replicalimits"}},p={},d=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function r(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"pod-disruption-budget",children:"Pod Disruption Budget"}),"\n",(0,l.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,l.jsxs)(n.p,{children:["Disallow the following scenarios when deploying PodDisruptionBudgets or resources that implement the replica subresource (e.g. Deployment, ReplicationController, ReplicaSet, StatefulSet): 1. Deployment of PodDisruptionBudgets with .spec.maxUnavailable == 0 2. Deployment of PodDisruptionBudgets with .spec.minAvailable == .spec.replicas of the resource with replica subresource This will prevent PodDisruptionBudgets from blocking voluntary disruptions such as node draining.\n",(0,l.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/workloads/pods/disruptions/",children:"https://kubernetes.io/docs/concepts/workloads/pods/disruptions/"})]}),"\n",(0,l.jsx)(n.h2,{id:"template",children:"Template"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8spoddisruptionbudget\n  annotations:\n    metadata.gatekeeper.sh/title: "Pod Disruption Budget"\n    metadata.gatekeeper.sh/version: 1.0.4\n    metadata.gatekeeper.sh/requires-sync-data: |\n      "[\n        [\n          {\n            "groups":["policy"],\n            "versions": ["v1"],\n            "kinds": ["PodDisruptionBudget"]\n          }\n        ]\n      ]"\n    description: >-\n      Disallow the following scenarios when deploying PodDisruptionBudgets or resources that implement the replica subresource (e.g. Deployment, ReplicationController, ReplicaSet, StatefulSet):\n      1. Deployment of PodDisruptionBudgets with .spec.maxUnavailable == 0\n      2. Deployment of PodDisruptionBudgets with .spec.minAvailable == .spec.replicas of the resource with replica subresource\n      This will prevent PodDisruptionBudgets from blocking voluntary disruptions such as node draining.\n\n      https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sPodDisruptionBudget\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8spoddisruptionbudget\n\n        violation[{"msg": msg}] {\n          input.review.kind.kind == "PodDisruptionBudget"\n          pdb := input.review.object\n\n          not valid_pdb_max_unavailable(pdb)\n          msg := sprintf(\n            "PodDisruptionBudget <%v> has maxUnavailable of 0, only positive integers are allowed for maxUnavailable",\n            [pdb.metadata.name],\n          )\n        }\n\n        violation[{"msg": msg}] {\n          obj := input.review.object\n          pdb := data.inventory.namespace[obj.metadata.namespace]["policy/v1"].PodDisruptionBudget[_]\n\n          matchLabels := { [label, value] | some label; value := pdb.spec.selector.matchLabels[label] }\n          labels := { [label, value] | some label; value := obj.spec.selector.matchLabels[label] }\n          count(matchLabels - labels) == 0\n\n          not valid_pdb_max_unavailable(pdb)\n          msg := sprintf(\n            "%v <%v> has been selected by PodDisruptionBudget <%v> but has maxUnavailable of 0, only positive integers are allowed for maxUnavailable",\n            [obj.kind, obj.metadata.name, pdb.metadata.name],\n          )\n        }\n\n        violation[{"msg": msg}] {\n          obj := input.review.object\n          pdb := data.inventory.namespace[obj.metadata.namespace]["policy/v1"].PodDisruptionBudget[_]\n          \n          matchLabels := { [label, value] | some label; value := pdb.spec.selector.matchLabels[label] }\n          labels := { [label, value] | some label; value := obj.spec.selector.matchLabels[label] }\n          count(matchLabels - labels) == 0\n\n          not valid_pdb_min_available(obj, pdb)\n          msg := sprintf(\n            "%v <%v> has %v replica(s) but PodDisruptionBudget <%v> has minAvailable of %v, PodDisruptionBudget count should always be lower than replica(s), and not used when replica(s) is set to 1",\n            [obj.kind, obj.metadata.name, obj.spec.replicas, pdb.metadata.name, pdb.spec.minAvailable],\n          )\n        }\n\n        valid_pdb_min_available(obj, pdb) {\n          # default to -1 if minAvailable is not set so valid_pdb_min_available is always true\n          # for objects with >= 0 replicas. If minAvailable defaults to >= 0, objects with\n          # replicas field might violate this constraint if they are equal to the default set here\n          min_available := object.get(pdb.spec, "minAvailable", -1)\n          obj.spec.replicas > min_available\n        }\n\n        valid_pdb_max_unavailable(pdb) {\n          # default to 1 if maxUnavailable is not set so valid_pdb_max_unavailable always returns true.\n          # If maxUnavailable defaults to 0, it violates this constraint because all pods needs to be\n          # available and no pods can be evicted voluntarily\n          max_unavailable := object.get(pdb.spec, "maxUnavailable", 1)\n          max_unavailable > 0\n        }\n\n'})}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/template.yaml\n"})}),"\n",(0,l.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"pod-disruption-budget"}),(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"constraint"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sPodDisruptionBudget\nmetadata:\n  name: pod-distruption-budget\nspec:\n  match:\n    kinds:\n      - apiGroups: ["apps"]\n        kinds: ["Deployment", "StatefulSet"]\n      - apiGroups: ["policy"]\n        kinds: ["PodDisruptionBudget"]\n      - apiGroups: [""]\n        kinds: ["ReplicationController"]\n\n'})}),(0,l.jsx)(n.p,{children:"Usage"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/samples/poddisruptionbudget/constraint.yaml\n"})})]}),(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"example-allowed-pdb"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: nginx-pdb-allowed\n  namespace: default\nspec:\n  maxUnavailable: 1\n  selector:\n    matchLabels:\n      foo: bar\n\n"})}),(0,l.jsx)(n.p,{children:"Usage"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/samples/poddisruptionbudget/example_allowed_pdb.yaml\n"})})]}),(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"example-disallowed-pdb"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: policy/v1\nkind: PodDisruptionBudget\nmetadata:\n  name: nginx-pdb-disallowed\n  namespace: default\nspec:\n  maxUnavailable: 0\n  selector:\n    matchLabels:\n      foo: bar\n\n"})}),(0,l.jsx)(n.p,{children:"Usage"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/samples/poddisruptionbudget/example_disallowed_pdb.yaml\n"})})]}),(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"example-allowed-min-available"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment-allowed-1\n  namespace: default\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n      example: allowed-deployment-1\n  template:\n    metadata:\n      labels:\n        app: nginx\n        example: allowed-deployment-1\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n\n"})}),(0,l.jsx)(n.p,{children:"Usage"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/samples/poddisruptionbudget/example_allowed_deployment1.yaml\n"})})]}),(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"example-allowed-max-unavailable"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment-allowed-2\n  namespace: default\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n      example: allowed-deployment-2\n  template:\n    metadata:\n      labels:\n        app: nginx\n        example: allowed-deployment-2\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n\n"})}),(0,l.jsx)(n.p,{children:"Usage"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/samples/poddisruptionbudget/example_allowed_deployment2.yaml\n"})})]}),(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"example-allowed-subset-selector"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment-allowed-3\n  namespace: default\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n      example: allowed-deployment-3\n  template:\n    metadata:\n      labels:\n        app: nginx\n        example: allowed-deployment-3\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n\n"})}),(0,l.jsx)(n.p,{children:"Usage"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/samples/poddisruptionbudget/example_allowed_deployment3.yaml\n"})})]}),(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"example-allowed-nomatch-selector"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment-allowed-4\n  namespace: default\n  labels:\n    app: non-matching-nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: non-matching-nginx\n      example: allowed-deployment-4\n  template:\n    metadata:\n      labels:\n        app: non-matching-nginx\n        example: allowed-deployment-4\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n\n"})}),(0,l.jsx)(n.p,{children:"Usage"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/samples/poddisruptionbudget/example_allowed_deployment4.yaml\n"})})]}),(0,l.jsxs)(a,{children:[(0,l.jsx)("summary",{children:"example-disallowed-min-available"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment-disallowed\n  namespace: default\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n      example: disallowed-deployment\n  template:\n    metadata:\n      labels:\n        app: nginx\n        example: disallowed-deployment\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\n\n"})}),(0,l.jsx)(n.p,{children:"Usage"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/poddisruptionbudget/samples/poddisruptionbudget/example_disallowed_deployment.yaml\n"})})]})]})]})}function c(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(r,{...e})}):r(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>s});var l=a(7294);const t={},i=l.createContext(t);function s(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);