"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4825],{6200:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var a=n(5893),t=n(1151);const o={id:"host-namespaces",title:"Host Namespace"},i="Host Namespace",r={id:"validation/host-namespaces",title:"Host Namespace",description:"Description",source:"@site/docs/validation/host-namespaces.md",sourceDirName:"validation",slug:"/validation/host-namespaces",permalink:"/gatekeeper-library/website/validation/host-namespaces",draft:!1,unlisted:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/validation/host-namespaces.md",tags:[],version:"current",frontMatter:{id:"host-namespaces",title:"Host Namespace"},sidebar:"docs",previous:{title:"Host Filesystem",permalink:"/gatekeeper-library/website/validation/host-filesystem"},next:{title:"Host Networking Ports",permalink:"/gatekeeper-library/website/validation/host-network-ports"}},c={},p=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.a)(),...e.components},{Details:n}=s;return n||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.h1,{id:"host-namespace",children:"Host Namespace"}),"\n",(0,a.jsx)(s.h2,{id:"description",children:"Description"}),"\n",(0,a.jsxs)(s.p,{children:["Disallows sharing of host PID and IPC namespaces by pod containers. Corresponds to the ",(0,a.jsx)(s.code,{children:"hostPID"})," and ",(0,a.jsx)(s.code,{children:"hostIPC"})," fields in a PodSecurityPolicy. For more information, see ",(0,a.jsx)(s.a,{href:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces",children:"https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces"})]}),"\n",(0,a.jsx)(s.h2,{id:"template",children:"Template"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8spsphostnamespace\n  annotations:\n    metadata.gatekeeper.sh/title: "Host Namespace"\n    metadata.gatekeeper.sh/version: 1.1.0\n    description: >-\n      Disallows sharing of host PID and IPC namespaces by pod containers.\n      Corresponds to the `hostPID` and `hostIPC` fields in a PodSecurityPolicy.\n      For more information, see\n      https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sPSPHostNamespace\n      validation:\n        # Schema for the `parameters` field\n        openAPIV3Schema:\n          type: object\n          description: >-\n            Disallows sharing of host PID and IPC namespaces by pod containers.\n            Corresponds to the `hostPID` and `hostIPC` fields in a PodSecurityPolicy.\n            For more information, see\n            https://kubernetes.io/docs/concepts/policy/pod-security-policy/#host-namespaces\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      code:\n      - engine: K8sNativeValidation\n        source:\n          variables:\n          - name: sharingHostIPC\n            expression: |\n              has(variables.anyObject.spec.hostIPC) ? variables.anyObject.spec.hostIPC : false\n          - name: sharingHostPID\n            expression: |\n              has(variables.anyObject.spec.hostPID) ? variables.anyObject.spec.hostPID : false\n          - name: sharingNamespace\n            expression: |\n              variables.sharingHostIPC || variables.sharingHostPID\n          validations:\n          - expression: \'(has(request.operation) && request.operation == "UPDATE") || !variables.sharingNamespace\'\n            messageExpression: \'"Sharing the host namespace is not allowed: " + variables.anyObject.metadata.name\'\n      - engine: Rego\n        source:\n          rego: |\n            package k8spsphostnamespace\n\n            import data.lib.exclude_update.is_update\n\n            violation[{"msg": msg, "details": {}}] {\n                # spec.hostPID and spec.hostIPC fields are immutable.\n                not is_update(input.review)\n\n                input_share_hostnamespace(input.review.object)\n                msg := sprintf("Sharing the host namespace is not allowed: %v", [input.review.object.metadata.name])\n            }\n\n            input_share_hostnamespace(o) {\n                o.spec.hostPID\n            }\n            input_share_hostnamespace(o) {\n                o.spec.hostIPC\n            }\n          libs:\n            - |\n              package lib.exclude_update\n\n              is_update(review) {\n                  review.operation == "UPDATE"\n              }\n\n'})}),"\n",(0,a.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-namespaces/template.yaml\n"})}),"\n",(0,a.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(n,{children:[(0,a.jsx)("summary",{children:"host-namespace"}),(0,a.jsxs)(n,{children:[(0,a.jsx)("summary",{children:"constraint"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sPSPHostNamespace\nmetadata:\n  name: psp-host-namespace\nspec:\n  match:\n    kinds:\n      - apiGroups: [""]\n        kinds: ["Pod"]\n\n'})}),(0,a.jsx)(s.p,{children:"Usage"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-namespaces/samples/psp-host-namespace/constraint.yaml\n"})})]}),(0,a.jsxs)(n,{children:[(0,a.jsx)("summary",{children:"example-allowed"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-host-namespace-allowed\n  labels:\n    app: nginx-host-namespace\nspec:\n  hostPID: false\n  hostIPC: false\n  containers:\n  - name: nginx\n    image: nginx\n\n"})}),(0,a.jsx)(s.p,{children:"Usage"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-namespaces/samples/psp-host-namespace/example_allowed.yaml\n"})})]}),(0,a.jsxs)(n,{children:[(0,a.jsx)("summary",{children:"example-disallowed"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-host-namespace-disallowed\n  labels:\n    app: nginx-host-namespace\nspec:\n  hostPID: true\n  hostIPC: true\n  containers:\n  - name: nginx\n    image: nginx\n\n"})}),(0,a.jsx)(s.p,{children:"Usage"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-shell",children:"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/pod-security-policy/host-namespaces/samples/psp-host-namespace/example_disallowed.yaml\n"})})]})]})]})}function d(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>r,a:()=>i});var a=n(7294);const t={},o=a.createContext(t);function i(e){const s=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),a.createElement(o.Provider,{value:s},e.children)}}}]);